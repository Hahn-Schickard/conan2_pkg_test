Checks: >
  -*,
  bugprone-*,
  cert-*,
  clang-analyzer-*,
  modernize-*,
  -modernize-use-trailing-return-type,
  -modernize-avoid-bind,
  -modernize-use-nodiscard,
  -modernize-return-braced-init-list,
  performance-*,
  portability-*,
  readability-*,
  -readability-else-after-return,
  -readability-named-parameter,
  -readability-identifier-length,
  -readability-uppercase-literal*
CheckOptions:
 - { key: readability-function-cognitive-complexity.IgnoreMacros,       value: true             }
 - { key: readability-identifier-naming.ClassCase,                      value: CamelCase        }
 - { key: readability-identifier-naming.ClassConstantCase,              value: UPPER_CASE       }
 - { key: readability-identifier-naming.ClassMethodCase,                value: camelBack        }
 - { key: readability-identifier-naming.ClassMemberCase,                value: lower_case       }
 - { key: readability-identifier-naming.ConstantCase,                   value: lower_case       }
 - { key: readability-identifier-naming.ConstantMemberCase,             value: lower_case       }
 - { key: readability-identifier-naming.ConstantPointerParameterCase,   value: lower_case       }
 - { key: readability-identifier-naming.ConstexprVariableCase,          value: UPPER_CASE       }
 - { key: readability-identifier-naming.EnumCase,                       value: CamelCase        }
 - { key: readability-identifier-naming.EnumConstantCase,               value: CamelCase        }
 - { key: readability-identifier-naming.FunctionCase,                   value: camelBack        }
 - { key: readability-identifier-naming.LocalConstantCase,              value: lower_case       }
 - { key: readability-identifier-naming.LocalConstantPointerCase,       value: lower_case       }
 - { key: readability-identifier-naming.LocalPointerCase,               value: lower_case       }
 - { key: readability-identifier-naming.LocalVariableCase,              value: lower_case       }
 - { key: readability-identifier-naming.MemberCase,                     value: lower_case       }
 - { key: readability-identifier-naming.MethodCase,                     value: camelBack        }
 - { key: readability-identifier-naming.NamespaceCase,                  value: camelBack        }
 - { key: readability-identifier-naming.ParameterCase,                  value: lower_case       }
 - { key: readability-identifier-naming.ParameterPackCase,              value: lower_case       }
 - { key: readability-identifier-naming.PrivateMemberCase,              value: lower_case       }
 - { key: readability-identifier-naming.PrivateMemberSuffix,            value: "_"              }
 - { key: readability-identifier-naming.PrivateMethodCase,              value: camelBack        }
 - { key: readability-identifier-naming.ProtectedMemberCase,            value: lower_case       }
 - { key: readability-identifier-naming.ProtectedMemberSuffix,          value: "_"              }
 - { key: readability-identifier-naming.ProtectedMethodCase,            value: camelBack        }
 - { key: readability-identifier-naming.PublicMemberCase,               value: lower_case       }
 - { key: readability-identifier-naming.PublicMethodCase,               value: camelBack        }
 - { key: readability-identifier-naming.StaticConstantCase,             value: UPPER_CASE       }
 - { key: readability-identifier-naming.StaticVariableCase,             value: lower_case       }
 - { key: readability-identifier-naming.StructCase,                     value: CamelCase        }
 - { key: readability-identifier-naming.TypedefCase,                    value: CamelCase        }
 - { key: readability-identifier-naming.UnionCase,                      value: CamelCase        }
 - { key: readability-identifier-naming.VariableCase,                   value: lower_case       }
 - { key: readability-identifier-naming.LocalVariableCase,              value: lower_case       }
 - { key: readability-identifier-naming.VirtualMethodCase,              value: camelBack        }
 - { key: readability-identifier-naming.NamespaceCase,                  value: aNy_CasE         }
